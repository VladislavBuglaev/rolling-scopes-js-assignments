{"version":3,"sources":["06-conditions-n-loops-tasks.js"],"names":[],"mappings":"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","file":"06-conditions-n-loops-tasks-compiled.js","sourcesContent":["'use strict';\n\n/**************************************************************************************************\n *                                                                                                *\n * Plese read the following tutorial before implementing tasks:                                   *\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Control_flow_and_error_handling  *\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Loops_and_iteration              *\n *                                                                                                *\n **************************************************************************************************/\n\n\n/**\n * Returns the 'Fizz','Buzz' or an original number using the following rules:\n * 1) return original number\n * 2) but if number multiples of three return 'Fizz'\n * 3) for the multiples of five return 'Buzz'\n * 4) for numbers which are multiples of both three and five return 'FizzBuzz'\n *\n * @param {number} num\n * @return {any}\n *\n * @example\n *   2 =>  2\n *   3 => 'Fizz'\n *   5 => 'Buzz'\n *   4 => 4\n *  15 => 'FizzBuzz'\n *  20 => 'Buzz'\n *  21 => 'Fizz'\n *\n */\nfunction getFizzBuzz(num) {\n    if (num%15===0)return 'FizzBuzz';\n    if (num%3===0)return 'Fizz';\n    if (num%5===0)return 'Buzz';\n    return num;\n}\n\n\n/**\n * Returns the factorial of the specified integer n.\n *\n * @param {number} n\n * @return {number}\n *\n * @example:\n *   1  => 1\n *   5  => 120\n *   10 => 3628800\n */\nfunction getFactorial(n) {\n    return n ? n * getFactorial(n - 1) : 1;\n}\n\n\n/**\n * Returns the sum of integer numbers between n1 and n2 (inclusive).\n *\n * @param {number} n1\n * @param {number} n2\n * @return {number}\n *\n * @example:\n *   1,2   =>  3  ( = 1+2 )\n *   5,10  =>  45 ( = 5+6+7+8+9+10 )\n *   -1,1  =>  0  ( = -1 + 0 + 1 )\n */\nfunction getSumBetweenNumbers(n1, n2) {\n    let sum = 0;\n    for (let i = n1; i <= n2; i++) {\n        sum += i;\n    }\n    return sum;\n}\n\n\n/**\n * Returns true, if a triangle can be built with the specified sides a,b,c and false in any other ways.\n *\n * @param {number} a\n * @param {number} b\n * @param {number} c\n * @return {bool}\n *\n * @example:\n *   1,2,3    =>  false\n *   3,4,5    =>  true\n *   10,1,1   =>  false\n *   10,10,10 =>  true\n */\nfunction isTriangle(a,b,c) {\n    return (a<b+c)\n        &&(b<a+c)\n        &&(c<a+b);\n}\n\n\n/**\n * Returns true, if two specified axis-aligned rectangles overlap, otherwise false.\n * Each rectangle representing by object \n *  {\n *     top: 5,\n *     left: 5,\n *     width: 20,\n *     height: 10\n *  }\n * \n *  (5;5)\n *     -------------  \n *     |           | \n *     |           |  height = 10\n *     ------------- \n *        width=20    \n * \n * NOTE: Please use canvas coordinate space (https://developer.mozilla.org/en-US/docs/Web/API/Canvas_API/Tutorial/Drawing_shapes#The_grid),\n * it differs from Cartesian coordinate system.\n * \n * @param {object} rect1\n * @param {object} rect2\n * @return {bool}\n *\n * @example:\n *   { top: 0, left: 0, width: 10, height: 10 },\n *   { top: 5, left: 5, width: 20, height: 20 }    =>  true\n * \n *   { top: 0, left: 0, width: 10, height: 10 },\n *   { top:20, left:20, width: 20, height: 20 }    =>  false\n *  \n */\nfunction doRectanglesOverlap(rect1, rect2) {\n    return rect1.top + rect1.height > rect2.top\n        && rect1.left + rect1.width > rect2.left\n        && rect2.top + rect2.height > rect1.top\n        && rect2.left + rect2.width > rect1.left;\n}\n\n\n/**\n * Returns true, if point lies inside the circle, otherwise false.\n * Circle is an object of \n *  {\n *     center: {\n *       x: 5,       \n *       y: 5\n *     },        \n *     radius: 20\n *  }\n * \n * Point is object of \n *  {\n *     x: 5,\n *     y: 5\n *  }\n * \n * @param {object} circle\n * @param {object} point\n * @return {bool}\n *\n * @example:\n *   { center: { x:0, y:0 }, radius:10 },  { x:0, y:0 }     => true\n *   { center: { x:0, y:0 }, radius:10 },  { x:10, y:10 }   => false\n *   \n */\nfunction isInsideCircle(circle, point) {\n    return (Math.hypot((point.x-circle.center.x),point.y-circle.center.y)<circle.radius);\n}\n\n\n/**\n * Returns the first non repeated char in the specified strings otherwise returns null.\n *\n * @param {string} str\n * @return {string}\n *\n * @example:\n *   'The quick brown fox jumps over the lazy dog' => 'T'\n *   'abracadabra'  => 'c'\n *   'entente' => null\n */\nfunction findFirstSingleChar(str) {\n    for (let i = 0; i < str.length; i++) {\n        if (str.indexOf(str.charAt(i), str.indexOf(str.charAt(i))+1) < 0) return str.charAt(i);\n    }\n}\n\n\n/**\n * Returns the string representation of math interval, specified by two points and include / exclude flags.\n * See the details: https://en.wikipedia.org/wiki/Interval_(mathematics)\n *\n * Please take attention, that the smaller number should be the first in the notation\n *\n * @param {number} a\n * @param {number} b\n * @param {bool} isStartIncluded\n * @param {bool} isEndIncluded\n * @return {string}\n *\n * @example\n *   0, 1, true, true   => '[0, 1]'\n *   0, 1, true, false  => '[0, 1)'\n *   0, 1, false, true  => '(0, 1]'\n *   0, 1, false, false => '(0, 1)'\n * Smaller number has to be first :\n *   5, 3, true, true   => '[3, 5]'\n *\n */\nfunction getIntervalString(a, b, isStartIncluded, isEndIncluded) {\n    var arr = [a,b];\n    arr.sort((a, b)=>a - b);\n    var StartIncluded = isStartIncluded ? '[' : '(';\n    var EndIncluded = isEndIncluded ? ']' : ')';\n    return `${StartIncluded}${arr[0]}, ${arr[1]}${EndIncluded}`;\n}\n\n\n/**\n * Reverse the specified string (put all chars in reverse order)\n *\n * @param {string} str\n * @return {string}\n *\n * @example:\n * 'The quick brown fox jumps over the lazy dog' => 'god yzal eht revo spmuj xof nworb kciuq ehT'\n * 'abracadabra' => 'arbadacarba'\n * 'rotator' => 'rotator'\n * 'noon' => 'noon'\n */\nfunction reverseString(str) {\n    //return str.split('').reverse().join('');\n    var result = [];\n    for (var i = str.length - 1; i >= 0; i--){\n        result += str[i];\n    }\n    return result;\n}\n\n\n/**\n * Reverse the specified integer number (put all digits in reverse order)\n *\n * @param {number} num\n * @return {number}\n *\n * @example:\n *   12345 => 54321\n *   1111  => 1111\n *   87354 => 45378\n *   34143 => 34143\n */\nfunction reverseInteger(num) {\n    var str = num.toString();\n    var result = [];\n    for (var i = str.length - 1; i >= 0; i--){\n        result += str[i];\n    }\n    return result;\n}\n\n\n/**\n * Validates the CCN (credit card number) and return true if CCN is valid\n * and false otherwise.\n *\n * See algorithm here : https://en.wikipedia.org/wiki/Luhn_algorithm\n *\n * @param {number} cnn\n * @return {boolean}\n *\n * @example:\n *   79927398713      => true\n *   4012888888881881 => true\n *   5123456789012346 => true\n *   378282246310005  => true\n *   371449635398431  => true\n *\n *   4571234567890111 => false\n *   5436468789016589 => false\n *   4916123456789012 => false\n */\nfunction isCreditCardNumber(ccn) {\n    var str = ccn.toString();\n    var result = [];\n    for (var i = 0; i < str.length; i++){\n        result += str[i];\n    }\n\n    var len=result.length;\n    var index;\n    var res = [];\n\n    if(len%2===0) index = 0;\n    else index = 1;\n    \n        for(let i=0;i<len;i++) {\n\n            if (i % 2 !== index) res.push(parseInt(result[i]));\n            else if (result[i] * 2 > 9) res.push(result[i] * 2 - 9);\n            else res.push(result[i] * 2);\n        }\n        var sum = res.reduce((sum, current)=>sum + current,0);\n        return (sum%10===0);\n}\n\n\n/**\n * Returns the digital root of integer:\n *   step1 : find sum of all digits\n *   step2 : if sum > 9 then goto step1 otherwise return the sum\n *\n * @param {number} n\n * @return {number}\n *\n * @example:\n *   12345 ( 1+2+3+4+5 = 15, 1+5 = 6) => 6\n *   23456 ( 2+3+4+5+6 = 20, 2+0 = 2) => 2\n *   10000 ( 1+0+0+0+0 = 1 ) => 1\n *   165536 (1+6+5+5+3+6 = 26,  2+6 = 8) => 8\n */\nfunction getDigitalRoot(num) {\n    if (num < 9)return num ;\n    var sum = 0;\n    while (num > 0) {\n        sum += num % 10;\n        num = parseInt(num/10);\n    }\n    return getDigitalRoot(sum);\n}\n\n\n/**\n * Returns true if the specified string has the balanced brackets and false otherwise.\n * Balanced means that is, whether it consists entirely of pairs of opening/closing brackets\n * (in that order), none of which mis-nest.\n * Brackets include [],(),{},<>\n *\n * @param {string} str\n * @return {boolean}\n *\n * @example:\n *   '' => true\n *   '[]'  => true\n *   '{}'  => true\n *   '()   => true\n *   '[[]' => false\n *   ']['  => false\n *   '[[][][[]]]' => true\n *   '[[][]][' => false\n *   '{)' = false\n *   '{[(<{[]}>)]}' = true \n */\nfunction isBracketsBalanced(str) {\n    var brackets = \"[]{}()<>\";\n    var stack = [];\n    var char, position;\n    for(var i = 0; char = str[i]; i++) {\n        position = brackets.indexOf(char);\n\n        if(position % 2 === 0) stack.push(position + 1);\n        else if(stack.length === 0 || stack.pop() !== position) return false;\n    }\n\n    return stack.length === 0;\n}\n\n\n/**\n * Returns the human readable string of time period specified by the start and end time.\n * The result string should be constrcuted using the folliwing rules:\n *\n * ---------------------------------------------------------------------\n *   Difference                 |  Result\n * ---------------------------------------------------------------------\n *    0 to 45 seconds           |  a few seconds ago\n *   45 to 90 seconds           |  a minute ago\n *   90 seconds to 45 minutes   |  2 minutes ago ... 45 minutes ago\n *   45 to 90 minutes           |  an hour ago\n *  90 minutes to 22 hours      |  2 hours ago ... 22 hours ago\n *  22 to 36 hours              |  a day ago\n *  36 hours to 25 days         |  2 days ago ... 25 days ago\n *  25 to 45 days               |  a month ago\n *  45 to 345 days              |  2 months ago ... 11 months ago\n *  345 to 545 days (1.5 years) |  a year ago\n *  546 days+                   |  2 years ago ... 20 years ago\n * ---------------------------------------------------------------------\n *\n * @param {Date} startDate\n * @param {Date} endDate\n * @return {string}\n *\n * @example\n *   Date('2000-01-01 01:00:00.100'), Date('2000-01-01 01:00:00.200')  => 'a few seconds ago'\n *   Date('2000-01-01 01:00:00.100'), Date('2000-01-01 01:00:05.000')  => '5 minutes ago'\n *   Date('2000-01-01 01:00:00.100'), Date('2000-01-02 03:00:05.000')  => 'a day ago'\n *   Date('2000-01-01 01:00:00.100'), Date('2015-01-02 03:00:05.000')  => '15 years ago'\n *\n */\nfunction timespanToHumanString(startDate, endDate) {\n    var ms = (endDate-startDate);\n    var rounding = Math.pow(10,-10)\n    var month = ms/2592000000.0000005;\n    var days = ms/86400000;\n    var hours = ms/3600000;\n    var minutes = ms/60000;\n    var seconds= ms/1000;\n    //года\n    if(days > 345 && days<545) return `a year ago`;\n    if(days > 546) return `${endDate.getFullYear()-startDate.getFullYear()} years ago`;\n    //месяцы\n    if(days>25 && days<=45) return 'a month ago';\n    if(days>=45 && days<=345) return `${Math.round(month-rounding)} months ago`;\n    //дни\n    if(hours>22 && hours<=36) return 'a day ago';\n    if(hours>=36 && hours<=25*24) return (`${Math.round(days-rounding)} days ago`);\n    //часы\n    if(minutes>45 && minutes <=90) return 'an hour ago';\n    if(minutes>=90 && hours <= 22) return `${Math.round(hours-rounding)} hours ago`;\n    //минуты\n    if(seconds>45 && seconds<=90) return 'a minute ago';\n    if(seconds>=90&&seconds<=45*60) return `${Math.round(minutes-rounding)} minutes ago`;\n    //секунды\n    if(seconds >= 0 && seconds <= 45) return 'a few seconds ago';\n}\n\n\n/**\n * Returns the string with n-ary (binary, ternary, etc, where n<=10) representation of specified number.\n * See more about\n * https://en.wikipedia.org/wiki/Binary_number\n * https://en.wikipedia.org/wiki/Ternary_numeral_system\n * https://en.wikipedia.org/wiki/Radix\n *\n * @param {number} num\n * @param {number} n, radix of the result\n * @return {string}\n *\n * @example:\n *   1024, 2  => '10000000000'\n *   6561, 3  => '100000000'\n *    365, 2  => '101101101'\n *    365, 3  => '111112'\n *    365, 4  => '11231'\n *    365, 10 => '365'\n */\n//hack\nfunction toNaryString(num, n) {\n    return num.toString(n);\n}\n\n\n/**\n * Returns the commom directory path for specified array of full filenames.\n *\n * @param {array} pathes\n * @return {string}\n *\n * @example:\n *   ['/web/images/image1.png', '/web/images/image2.png']  => '/web/images/'\n *   ['/web/assets/style.css', '/web/scripts/app.js',  'home/setting.conf'] => ''\n *   ['/web/assets/style.css', '/.bin/mocha',  '/read.me'] => '/'\n *   ['/web/favicon.ico', '/web-scripts/dump', '/webalizer/logs'] => '/'\n */\nfunction getCommonDirectoryPath(pathes) {\n    var result;\n    for (let i = 0; i < pathes[0].length; i++ ) {\n        for (let j = 1; j < pathes.length; j++) {\n            if (pathes[0].charAt(i) !== pathes[j].charAt(i)) {\n                result = pathes[0].slice(0, i);\n                return result.slice(0, result.lastIndexOf('/')+1);\n            }\n        }\n    }\n}\n\n\n/**\n * Returns the product of two specified matrixes.\n * See details: https://en.wikipedia.org/wiki/Matrix_multiplication\n *\n * @param {array} m1\n * @param {array} m2\n * @return {array}\n *\n * @example:\n *   [[ 1, 0, 0 ],       [[ 1, 2, 3 ],           [[ 1, 2, 3 ],\n *    [ 0, 1, 0 ],   X    [ 4, 5, 6 ],     =>     [ 4, 5, 6 ],\n *    [ 0, 0, 1 ]]        [ 7, 8, 9 ]]            [ 7, 8, 9 ]]\n *\n *                        [[ 4 ],\n *   [[ 1, 2, 3]]    X     [ 5 ],          =>     [[ 32 ]]\n *                         [ 6 ]]\n *\n */\nfunction getMatrixProduct(m1, m2) {\n    var resultMatrix = [];\n    for (var i = 0; i < m1.length; i++) {\n        resultMatrix[i] = [];\n    }\n\n    for (var k = 0; k < m2[0].length; k++) {\n        for (var i = 0; i < m1.length; i++) {\n            var temp = 0;\n        for (var j = 0; j < m2.length; j++)\n            temp += m1[i][j]*m2[j][k];\n            resultMatrix[i][k] = temp;\n    }\n    }\n    return resultMatrix;\n}\n\n\n/**\n * Returns the evaluation of the specified tic-tac-toe position.\n * See the details: https://en.wikipedia.org/wiki/Tic-tac-toe\n *\n * Position is provides as 3x3 array with the following values: 'X','0', undefined\n * Function should return who is winner in the current position according to the game rules.\n * The result can be: 'X','0',undefined\n *\n * @param {array} position\n * @return {string}\n *\n * @example\n *\n *   [[ 'X',   ,'0' ],\n *    [    ,'X','0' ],       =>  'X'\n *    [    ,   ,'X' ]]\n *\n *   [[ '0','0','0' ],\n *    [    ,'X',    ],       =>  '0'\n *    [ 'X',   ,'X' ]]\n *\n *   [[ '0','X','0' ],\n *    [    ,'X',    ],       =>  undefined\n *    [ 'X','0','X' ]]\n *\n *   [[    ,   ,    ],\n *    [    ,   ,    ],       =>  undefined\n *    [    ,   ,    ]]\n *\n */\nfunction evaluateTicTacToePosition(position) {\n    function checkCombination(v1, v2, v3) {\n        return v1 === v2 && v2 === v3 && v1 != undefined\n    }\n   for(let i=0; i<3;i++) {\n       if (checkCombination(position[i][0],position[i][1],position[i][2]))return position[i][0];\n       if (checkCombination(position[0][i],position[1][i],position[2][i]))return position[0][i];\n       if (checkCombination(position[0][0],position[1][1],position[2][2]))return position[0][0];\n       if (checkCombination(position[0][2],position[1][1],position[2][0]))return position[0][2];\n   }\n}\n\n\nmodule.exports = {\n    getFizzBuzz: getFizzBuzz,\n    getFactorial: getFactorial,\n    getSumBetweenNumbers: getSumBetweenNumbers,\n    isTriangle: isTriangle,\n    doRectanglesOverlap: doRectanglesOverlap,\n    isInsideCircle: isInsideCircle,\n    findFirstSingleChar: findFirstSingleChar,\n    getIntervalString : getIntervalString,\n    reverseString: reverseString,\n    reverseInteger: reverseInteger,\n    isCreditCardNumber: isCreditCardNumber,\n    getDigitalRoot: getDigitalRoot,\n    isBracketsBalanced: isBracketsBalanced,\n    timespanToHumanString : timespanToHumanString,\n    toNaryString: toNaryString,\n    getCommonDirectoryPath: getCommonDirectoryPath,\n    getMatrixProduct: getMatrixProduct,\n    evaluateTicTacToePosition : evaluateTicTacToePosition\n};\n"]}