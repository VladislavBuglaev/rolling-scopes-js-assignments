{"version":3,"sources":["07-yield-tasks.js"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkCA,UAAU,kBAAV,GAA+B;AAC3B,QAAI,QAAQ,EAAR,CADuB;AAE3B,WAAM,QAAQ,CAAR,EAAU;AACZ,cAAM,CAAC,GAAE,KAAH,EAAS,8BAAT,GAAyC,KAAzC,EAA+C,iBAA/C,CAAN,CADY;AAEZ,cAAM,CAAC,kCAAD,GAAqC,EAAE,KAAF,EAAQ,6BAA7C,CAAN,CAFY;KAAhB;AAIA,UAAM,mDAAN,CAN2B;AAO3B,UAAM,iEAAN,CAP2B;AAQ3B,UAAM,iDAAN,CAR2B;AAS3B,UAAM,wEAAN,CAT2B;AAU3B,UAAM,+DAAN,CAV2B;AAW3B,UAAM,oEAAN,CAX2B;CAA/B;;;;;;;;;;;AAwBA,UAAU,oBAAV,GAAiC;AAC7B,QAAI,OAAO,CAAP,CADyB;AAE7B,QAAI,OAAO,CAAP,CAFyB;AAG7B,QAAI,MAAJ,CAH6B;AAI7B,WAAO,CAAP,EAAS;AACL,iBAAS,IAAT,CADK;AAEL,eAAO,IAAP,CAFK;AAGL,eAAO,SAAS,IAAT,CAHF;AAIL,cAAM,MAAN,CAJK;KAAT;CAJJ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2CA,UAAU,kBAAV,CAA6B,IAA7B,EAAmC;AAC/B,QAAI,IAAE,CAAC,IAAD,CAAF,CAD2B;AAE/B,WAAO,EAAE,MAAF,GAAS,CAAT,EAAY;AACf,YAAI,IAAI,EAAE,GAAF,EAAJ,CADW;AAEf,cAAM,CAAN,CAFe;AAGf,YAAI,EAAE,QAAF,EAAY;AACZ,iBAAK,IAAI,KAAJ,IAAa,EAAE,QAAF,CAAW,OAAX,EAAlB,EACI,EAAE,IAAF,CAAO,KAAP,EADJ;SADJ;KAHJ;CAFJ;;;;;;;;;;;;;;;;;;;;;;;AAkCA,UAAU,oBAAV,CAA+B,IAA/B,EAAqC;AACjC,QAAI,IAAE,CAAC,IAAD,CAAF,CAD6B;AAEjC,WAAO,EAAE,MAAF,GAAS,CAAT,EAAY;AACf,YAAI,IAAI,EAAE,KAAF,EAAJ,CADW;AAEf,cAAM,CAAN,CAFe;AAGf,YAAI,EAAE,QAAF,EAAY;AACZ,iBAAK,IAAI,KAAJ,IAAa,EAAE,QAAF,EACd,EAAE,IAAF,CAAO,KAAP,EADJ;SADJ;KAHJ;CAFJ;;;;;;;;;;;;;;;AA0BA,UAAU,oBAAV,CAA+B,OAA/B,EAAwC,OAAxC,EAAiD;AAC7C,QAAI,YAAU,SAAV,CADyC;AAE7C,QAAI,YAAU,SAAV,CAFyC;AAG7C,QAAI,MAAM,EAAN,CAHyC;AAI7C,QAAI,IAAJ,CAAS,UAAU,IAAV,GAAiB,KAAjB,CAAT,CAJ6C;AAK7C,QAAI,IAAJ,CAAS,UAAU,IAAV,GAAiB,KAAjB,CAAT,CAL6C;AAM7C,QAAI,IAAJ,CAAS,CAAC,CAAD,EAAI,CAAJ,KAAQ;AAAE,eAAO,IAAI,CAAJ,CAAT;KAAR,CAAT,CAN6C;AAO7C,WAAQ,GAAR,CAP6C;CAAjD;;AAWA,OAAO,OAAP,GAAiB;AACb,wBAAoB,kBAApB;AACA,0BAAsB,oBAAtB;AACA,wBAAoB,kBAApB;AACA,0BAAsB,oBAAtB;AACA,0BAAsB,oBAAtB;CALJ","file":"07-yield-tasks-compiled.js","sourcesContent":["'use strict';\n\n/********************************************************************************************\n *                                                                                          *\n * Plese read the following tutorial before implementing tasks:                             *\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Iterators_and_Generators   *\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/yield        *\n *                                                                                          *\n ********************************************************************************************/\n\n\n/**\n * Returns the lines sequence of \"99 Bottles of Beer\" song:\n *\n *  '99 bottles of beer on the wall, 99 bottles of beer.'\n *  'Take one down and pass it around, 98 bottles of beer on the wall.'\n *  '98 bottles of beer on the wall, 98 bottles of beer.'\n *  'Take one down and pass it around, 97 bottles of beer on the wall.'\n *  ...\n *  '1 bottle of beer on the wall, 1 bottle of beer.'\n *  'Take one down and pass it around, no more bottles of beer on the wall.'\n *  'No more bottles of beer on the wall, no more bottles of beer.'\n *  'Go to the store and buy some more, 99 bottles of beer on the wall.'\n *\n * See the full text at\n * http://99-bottles-of-beer.net/lyrics.html\n *\n * NOTE: Please try to complete this task faster then original song finished:\n * https://www.youtube.com/watch?v=Z7bmyjxJuVY   :)\n *\n *\n * @return {Iterable.<string>}\n *\n */\nfunction* get99BottlesOfBeer() {\n    var index = 99;\n    while(index > 2){\n        yield `${index} bottles of beer on the wall, ${index} bottles of beer.`;\n        yield `Take one down and pass it around, ${--index} bottles of beer on the wall.`;\n    }\n    yield '2 bottles of beer on the wall, 2 bottles of beer.';\n    yield 'Take one down and pass it around, 1 bottle of beer on the wall.';\n    yield '1 bottle of beer on the wall, 1 bottle of beer.';\n    yield 'Take one down and pass it around, no more bottles of beer on the wall.';\n    yield 'No more bottles of beer on the wall, no more bottles of beer.';\n    yield 'Go to the store and buy some more, 99 bottles of beer on the wall.';\n}\n\n\n/**\n * Returns the Fibonacci sequence:\n *   0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, ...\n *\n * See more at: https://en.wikipedia.org/wiki/Fibonacci_number\n *\n * @return {Iterable.<number>}\n *\n */\nfunction* getFibonacciSequence() {\n    var num1 = 0;\n    var num2 = 1;\n    var result;\n    while (1){\n        result = num1;\n        num1 = num2;\n        num2 = result + num2;\n        yield result;\n    }\n}\n\n\n/**\n * Traverses a tree using the depth-first strategy\n * See details: https://en.wikipedia.org/wiki/Depth-first_search\n *\n * Each node have child nodes in node.children array.\n * The leaf nodes do not have 'children' property.\n *\n * @params {object} root the tree root\n * @return {Iterable.<object>} the sequence of all tree nodes in depth-first order\n * @example\n *\n *   var node1 = { n:1 }, node2 = { n:2 }, node3 = { n:3 }, node4 = { n:4 },\n *       node5 = { n:5 }, node6 = { n:6 }, node7 = { n:7 }, node8 = { n:8 };\n *   node1.children = [ node2, node6, node7 ];\n *   node2.children = [ node3, node4 ];\n *   node4.children = [ node5 ];\n *   node7.children = [ node8 ];\n *\n *     source tree (root = 1):\n *            1\n *          / | \\\n *         2  6  7\n *        / \\     \\            =>    { 1, 2, 3, 4, 5, 6, 7, 8 }\n *       3   4     8\n *           |\n *           5\n *\n *  depthTraversalTree(node1) => node1, node2, node3, node4, node5, node6, node7, node8\n *\n */\nfunction* depthTraversalTree(root) {\n    var s=[root];\n    while (s.length>0) {\n        var v = s.pop();\n        yield v;\n        if (v.children) {\n            for (var edges of v.children.reverse())\n                s.push(edges)\n        }\n    }\n}\n\n\n/**\n * Traverses a tree using the breadth-first strategy\n * See details: https://en.wikipedia.org/wiki/Breadth-first_search\n *\n * Each node have child nodes in node.children array.\n * The leaf nodes do not have 'children' property.\n *\n * @params {object} root the tree root\n * @return {Iterable.<object>} the sequence of all tree nodes in breadth-first order\n * @example\n *     source tree (root = 1):\n *\n *            1\n *          / | \\\n *         2  3  4\n *        / \\     \\            =>    { 1, 2, 3, 4, 5, 6, 7, 8 }\n *       5   6     7\n *           |\n *           8\n *\n */\nfunction* breadthTraversalTree(root) {\n    var s=[root];\n    while (s.length>0) {\n        var v = s.shift();\n        yield v;\n        if (v.children) {\n            for (var edges of v.children)\n                s.push(edges)\n        }\n    }\n}\n\n\n/**\n * Merges two yield-style sorted sequences into the one sorted sequence.\n * The result sequence consists of sorted items from source iterators.\n *\n * @params {Iterable.<number>} source1\n * @params {Iterable.<number>} source2\n * @return {Iterable.<number>} the merged sorted sequence\n *\n * @example\n *   [ 1, 3, 5, ... ], [2, 4, 6, ... ]  => [ 1, 2, 3, 4, 5, 6, ... ]\n *   [ 0 ], [ 2, 4, 6, ... ]  => [ 0, 2, 4, 6, ... ]\n *   [ 1, 3, 5, ... ], [ -1 ] => [ -1, 1, 3, 5, ...]\n */\nfunction* mergeSortedSequences(source1, source2) {\n    var iterator1=source1();\n    var iterator2=source2();\n    var arr = [];\n    arr.push(iterator1.next().value);\n    arr.push(iterator2.next().value);\n    arr.sort((a, b)=>{ return a - b});\n    yield * arr;\n}\n\n\nmodule.exports = {\n    get99BottlesOfBeer: get99BottlesOfBeer,\n    getFibonacciSequence: getFibonacciSequence,\n    depthTraversalTree: depthTraversalTree,\n    breadthTraversalTree: breadthTraversalTree,\n    mergeSortedSequences: mergeSortedSequences\n};\n"]}